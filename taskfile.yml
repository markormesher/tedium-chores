version: "3"
tasks:
  img-build:
    cmds:
      - task: img-build-generate-taskfile
  img-build-generate-taskfile:
    dir: '{{.ROOT_DIR}}/generate-taskfile'
    cmds:
      - cmd: |2
          # Podman or Docker?
          if command -v podman >/dev/null 2>&1; then
            builder=podman
          elif command -v docker >/dev/null 2>&1; then
            builder=docker
          else
            echo "Cannot find Podman or Docker installed - image will not be built" >&2
          	exit 1
          fi

          # First build to get visible logs
          $builder build . -f Containerfile

          # Second (cached) build to get the image ID
          img=$($builder build -q . -f Containerfile)

          img_name=$($builder inspect $img | jq -rc '.[0].Config.Labels["image.name"]')
          img_registry=$($builder inspect $img | jq -rc '.[0].Config.Labels["image.registry"]')
          if [[ ! -z  "$img_name" ]]; then
            $builder tag "$img" "$img_name"
          	echo "Tagged $img_name"

          	if [[ ! -z "$img_registry" ]]; then
          		$builder tag "$img" "$img_registry/$img_name"
          		echo "Tagged $img_registry/$img_name"
          	fi
          else
            echo "Warning: no image name detected; this image has not been labelled" >&2
          fi
  lint:
    cmds:
      - task: lint-go-generate-taskfile
  lint-fix:
    cmds:
      - task: lint-fix-go-generate-taskfile
  lint-fix-go-generate-taskfile:
    dir: '{{.ROOT_DIR}}/generate-taskfile'
    cmds:
      - cmd: gofmt -s -w .
  lint-go-generate-taskfile:
    dir: '{{.ROOT_DIR}}/generate-taskfile'
    cmds:
      - cmd: |-
          lint_diff=$(gofmt -e -s -d .)
          if [[ ! -z "$lint_diff" ]]; then
            echo "Lint errors:"
            echo "$lint_diff"
            exit 1
          fi
